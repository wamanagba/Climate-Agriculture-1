cpt2=(cpt+2)%%12
if(cpt2==0) cpt2=12
s=cpt
A=c("Jan", "Feb", "Mar", "Apr", "May", "Jun" ,"Jul", "Aug", "Sep" ,"Oct", "Nov", "Dec")
season=paste(substr(A[cpt],1,1),substr(A[cpt1],1,1),substr(A[cpt2],1,1),sep = "")
# dd=data.frame()
#
# k=2000
# for (k in 1981:2010) {
#   print(k);
#   print(season)
#
#   Data<-rio::import(paste("Data/CPC-UNIFIED/CSV_Format/",k,".csv",sep=""))
#   Data$Month=format(Data$T,"%b")
#   Data$rain[is.na(Data$rain)]=0
#   Data= filter(Data,Month %in% A[c(cpt,cpt1,cpt2)])
#
#   Data$count=ifelse(Data$rain<20,0,1)
#
#   NumberDay=Data%>%
#     group_by(X,Y)%>%
#     summarise(Numbers=sum(count))
#
#   dd=rbind(dd,NumberDay)
#
# }
# MeanNumberDay=dd%>%
#   group_by(X,Y)%>%
#   summarise(Number=mean(Numbers))
# dir.create(paste("Data/CPC-UNIFIED/Number_RainDays/Days20/",sep = ""),recursive = T,showWarnings = F)
# rio::export(MeanNumberDay,paste("Data/CPC-UNIFIED/Number_RainDays/Days20/",season,".csv"))
#
Data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/Number_RainDays/Days2_5/",season," .csv",sep = ""))
#Data=rio::import(paste("Data/CPC-UNIFIED/Number_RainDays/Days20/ SON .csv",sep = ""))
Data2=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/Mask/mask_ ",season," .csv",sep = ""))
Data_F=merge(Data,Data2,by=c('X','Y'))
Data_F=filter(Data_F,mask==1)
Raster_file<-rasterFromXYZ(Data_F[c("X","Y","Number")])
Raster_file_1=disaggregate(Raster_file,8,method='bilinear')
rr = raster::mask(Raster_file_1 ,Africa)
Data_F <- as.data.frame(rasterToPoints(rr ))
#rio::export(Data,"Data/Annual_Total_Mean_1983_2021_CHIRPS.csv")
mybreaks <- c(0,5,10,15,20,25,30,35,40,45,50,55,Inf)
#Function to return the desired number of colors
mycolors<- function(x) {
colors<-colorRampPalette(c("#8cb02c","darkviolet","#37fdf8", "blue", "#5E626EFF", "#03051AFF", "#0D0887FF","#F0F921FF",  "#CC4678FF", "#F89441FF" ,"red","darkred" ))(12)
colors[1:x]
}
#Function to create labels for legend
breaklabel <- function(x){
labels<- as.character(c(0,5,10,15,20,25,30,35,40,45,50,55))
labels[1:x]
}
################################################################################
#Title<-paste("Number of dry spell overs 10 days", "\nRef: 1981-2010","\nData Source: ",Data_Source,"\n Season:",season,sep="")
Title<-toupper(paste("Number of rainy days from ",season,"\nRef: 1981-2010","\nData Source: ",Data_Source,sep=""))
#Im<-grid::rasterGrob(png::readPNG("Logos/Acmad_logo_1.png"), interpolate = TRUE)
l<-ggplot()+geom_contour_filled(data=Data_F, aes(x,y,z =Number),breaks= mybreaks, show.legend = TRUE) +
scale_fill_manual(palette=mycolors, values=breaklabel(12), name="", drop=FALSE, guide = guide_legend(reverse = T))+theme_bw()
last<-l+geom_polygon(data = Africa, aes(x = long,y = lat, group = group), fill = NA,color = "black",size = 1.1)+ theme(legend.position = c(.04, .04),legend.justification = c("left", "bottom"),legend.box.just = "right",legend.margin = margin(6, 6, 6, 6),legend.text = element_text(size=20),plot.title = element_text(hjust = 0.5,size=25,face = "bold"),axis.text.x = element_text(size=15,face = "bold"),axis.text.y = element_text(size=15,face = "bold"))
#last<-last+  annotation_custom(Im, xmin = MaxLon-5, xmax = MaxLon, ymin =MaxLat-5, ymax = MaxLat) +coord_cartesian(clip = "off")
last<-last+metR::scale_x_longitude(limits = c(MinLon,MaxLon),breaks =seq(MinLon,MaxLon,5))+scale_y_latitude(limits = c(MinLat,MaxLat),breaks =seq(MinLat,MaxLat,5))
last<-last+labs(title = Title,x="",y="")
dir.create(paste("Products/Number_Rain_Day/Day2_5/",sep=""),recursive = T,showWarnings = F)
jpeg(filename = paste("Products/Number_Rain_Day/Day2_5/",s,"-",season,".jpeg",sep=""),
width = 14,
height =14,
units = "in",
res=300)
print(last)
dev.off()
}
#https://iridl.ldeo.columbia.edu/expert/expert/SOURCES/.NOAA/.NCEP/.CPC/.CAMS_OPI/.v0208/.mean/.prcp/T/(Aug%201981)/(Oct%202010)/RANGEEDGES/Y/-40/0.5/40/GRID/X/-25/0.5/55/GRID/T/3/runningAverage/T/12/STEP/92/mul/data.nc
################################################################################
library(rio)
library(dplyr)
library(RColorBrewer)
library(metR)
library(ggplot2)
library(rgdal)
library(ggplot2)
library(tidyverse)
library(raster)
library(sp)
library(ggdark)
library(showtext)
library(ggrepel)
require("fields")
library(zoo)
library(tidync)
library(Hmisc)
library(ncdf4)
rm(list = ls())
options(download.file.method="libcurl", url.method="libcurl")
options(download.file.extra = '--no-check-certificate')
setwd("E:/Climate-Agriculture-1/RainDays/")
###############################Define Your Parameters###########################
Start_Year=1980
End_Year=2021
Season_Name<-"FMA"
MinLon= -25
MaxLon=55
MinLat=-40
MaxLat=40
Data_Source="CPC-UNIFIED"
################################################################################
Year<-Start_Year
#################################################
dir.create("Data",recursive = T,showWarnings = F)
#   }
#   if(j==Start_Year){
#     ALL_Data<-Data
#   }
#   else{
#     ALL_Data<-rbind(ALL_Data,Data)
#   }
#   t<-t+1
#
# }
k=1981
Africa<-readOGR("/ACMAD_Git/SHP_AFRIQUE/Afrique_frontier_news.shp")
print(Season_Name)
Data=data_frame()
data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_RainDays//",Season_Name,"/",k,".csv",sep = ""))
data$Year=k
Data=rbind(Data,data)
for (k in 1981:2021) {
data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_RainDays//",Season_Name,"/",k,".csv",sep = ""))
data$Year=k
Data=rbind(Data,data)
}
# rio::export(ALL_Data,"Products/Data/Cumulative_81_2021_JJA.csv")
# ALL_Data$Cum<-ALL_Data$Cum/Number_of_Months
#
Trend<-Data%>%
group_by(X,Y)%>%
summarise(TrendValue=summary(lm(coredata(NbRainDay)~index(Year)))$coefficients[2])
Trend$TrendValue<-Trend$TrendValue*10
#
Pvalue<-Data%>%
group_by(X,Y)%>%
summarise(pvalue=summary(lm(coredata(NbRainDay)~index(Year)))$coefficients[8])
r<-rasterFromXYZ(Trend[,c("X","Y","TrendValue")])
Data_Interpolated<-disaggregate(r,1,method="bilinear")
Data_Interpolated<-raster::mask(Data_Interpolated,Africa)
Trend_Raster<-rasterFromXYZ(Trend)
Trend_Raster_Interpoleted<-disaggregate(Trend_Raster,10,"bilinear")
Trend_Raster_Interpoleted_Masked<-raster::mask(Trend_Raster_Interpoleted,Africa)
Trend_df<-as.data.frame(rasterToPoints(Trend_Raster_Interpoleted_Masked))
Pvalue_Raster<-rasterFromXYZ(Pvalue)
Pvalue_Raster_Interpoleted<-aggregate(Pvalue_Raster,fact=2)
Pvalue_Raster_Interpoleted_Masked<-raster::mask(Pvalue_Raster_Interpoleted,Africa)
Pvalue_df<-as.data.frame(rasterToPoints(Pvalue_Raster_Interpoleted_Masked))
mybreaks <- c(-Inf,-12,-9,-3,0,3,9,12,15,Inf)
#Function to return the dersired number of colors
mycolors<- function(x) {
colors<-colorRampPalette(c("red","#FF8303","#FFAF42","#e4ebdd","#e4ebdd","green","#4c97ff","#1806ff"))(9)
colors[1:x]
}
#Function to create labels for legend
breaklabel <- function(x){
labels<- as.character(c("<",-12,-9,-3,0,3,9,12,">"))
labels[1:x]
}
Title = paste("Number of Rain Days Trend for ",Season_Name,"\nData Source:",Data_Source,sep="")
Im<-grid::rasterGrob(png::readPNG(paste("/home/acmad/Desktop/ACMAD_Git/Logos/Acmad_logo_1.png",sep="")), interpolate = TRUE)
Im<-grid::rasterGrob(png::readPNG(paste("/ACMAD_Git/Logos/Acmad_logo_1.png",sep="")), interpolate = TRUE)
l<-ggplot(data = Pvalue_df,aes(x,y))+geom_contour_filled(data=Trend_df, aes(x,y,z =TrendValue),breaks= mybreaks, show.legend = TRUE) +
scale_fill_manual(palette=mycolors, values=breaklabel(9), name="mm/decade", drop=FALSE, guide = guide_legend(reverse = TRUE))+theme_bw()
last<-l+geom_polygon(data = Africa, aes(x = long,y = lat, group = group), fill = NA,color = "black",size = 1.1)+ theme(legend.position = c(.05, .05),legend.justification = c("left", "bottom"),legend.box.just = "right",legend.margin = margin(6, 6, 6, 6),legend.text = element_text(size=20,face = "bold"),legend.title =  element_text(size=15,face = "bold"),plot.title = element_text(hjust = 0.5,size=25,face = "bold"),axis.text.x = element_text(size=15,face = "bold"),axis.text.y = element_text(size=15,face = "bold"))
last<-last+  annotation_custom(Im, xmin = MaxLon-5, xmax = MaxLon, ymin =MaxLat-5, ymax = MaxLat) +coord_cartesian(clip = "off")
last<-last+labs(title = Title,x="",y="")+stat_subset(aes(subset =pvalue <=0.05),goem="point", size = 2.1,color="black")
last<-last+ metR::scale_x_longitude(limits = c(MinLon, MaxLon),breaks = seq(MinLon, MaxLon,10)) + metR:: scale_y_latitude(limits = c(MinLat, MaxLat),breaks = seq(MinLat, MaxLat,10))
dir.create(paste("Products/Trend/",sep=""),recursive = T,showWarnings = F)
jpeg(filename = paste("Products/Trend/",Season_Name,"/",Start_Year,"_",End_Year,".jpeg",sep=""),
width = 10,
height = 13,
units = "in",
res=300)
jpeg(filename = paste("Products/Trend/",Season_Name,"/",Start_Year,"_",End_Year,".jpeg",sep=""),
width = 10,
height = 13,
units = "in",
res=300)
jpeg(filename = paste("Products/Trend/",Season_Name,"-",Start_Year,"_",End_Year,".jpeg",sep=""),
width = 10,
height = 13,
units = "in",
res=300)
print(last)
dev.off()
for (Season_Name in c("JFM","FMA","MAM","AMJ","MJJ","JJA","JAS","ASO","SON","OND","NDJ","DJF")) {
print(Season_Name)
Data=data_frame()
for (k in 1981:2021) {
data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_RainDays//",Season_Name,"/",k,".csv",sep = ""))
data$Year=k
Data=rbind(Data,data)
}
# rio::export(ALL_Data,"Products/Data/Cumulative_81_2021_JJA.csv")
# ALL_Data$Cum<-ALL_Data$Cum/Number_of_Months
#
Trend<-Data%>%
group_by(X,Y)%>%
summarise(TrendValue=summary(lm(coredata(NbRainDay)~index(Year)))$coefficients[2])
Trend$TrendValue<-Trend$TrendValue*10
#
Pvalue<-Data%>%
group_by(X,Y)%>%
summarise(pvalue=summary(lm(coredata(NbRainDay)~index(Year)))$coefficients[8])
######Mapping
#Shape file
# #Mask File
# dir.create("Mask")
# download.file(paste("http://154.66.220.45:8080/thredds/fileServer/ACMAD/CDD/climatedataservice/Seasonal_Climate_Zones/Masked/CAMS_OPI/1981-2010/Climatology_",Start_Month,"_",End_Month,"_1981_2010_CAMS_Masked.nc",sep=""),mode = "wb",paste("Mask/",Season_Name,".nc",sep=""))
#
# Mask<-tidync::tidync(paste("Mask/",Season_Name,".nc",sep=""))%>%hyper_tibble()
#
# names(Mask)[2]="X"
#
# names(Mask)[3]="Y"
#
# Trend<-merge(Data,Mask,by=c("X","X"),all=T)
#
# Trend$TrendValue<-ifelse(Trend$mask==-1,NA,Trend$TrendValue)
#
# Pvalue<-merge(Pvalue,Mask,by=c("Lon","Lat"),all=T)
#
# Pvalue$pvalue<-ifelse(Pvalue$mask==-1,NA,Pvalue$pvalue)
################################################################################
r<-rasterFromXYZ(Trend[,c("X","Y","TrendValue")])
Data_Interpolated<-disaggregate(r,1,method="bilinear")
Data_Interpolated<-raster::mask(Data_Interpolated,Africa)
# writeRaster(Data_Interpolated,filename = paste("Products/Data/TrendV_1981_2021_CAMS_",Season_Name,".nc",sep=""),varname="Trend",format="CDF",overwrite=TRUE)
################################################################################
##############################Mapping###########################################
Trend_Raster<-rasterFromXYZ(Trend)
Trend_Raster_Interpoleted<-disaggregate(Trend_Raster,10,"bilinear")
Trend_Raster_Interpoleted_Masked<-raster::mask(Trend_Raster_Interpoleted,Africa)
Trend_df<-as.data.frame(rasterToPoints(Trend_Raster_Interpoleted_Masked))
################################################################################
Pvalue_Raster<-rasterFromXYZ(Pvalue)
Pvalue_Raster_Interpoleted<-aggregate(Pvalue_Raster,fact=2)
Pvalue_Raster_Interpoleted_Masked<-raster::mask(Pvalue_Raster_Interpoleted,Africa)
Pvalue_df<-as.data.frame(rasterToPoints(Pvalue_Raster_Interpoleted_Masked))
################################################################################
mybreaks <- c(-Inf,-12,-9,-3,0,3,9,12,15,Inf)
#Function to return the dersired number of colors
mycolors<- function(x) {
colors<-colorRampPalette(c("red","#FF8303","#FFAF42","#e4ebdd","#e4ebdd","green","#4c97ff","#1806ff"))(9)
colors[1:x]
}
#Function to create labels for legend
breaklabel <- function(x){
labels<- as.character(c("<",-12,-9,-3,0,3,9,12,">"))
labels[1:x]
}
Title = paste("Number of Rain Days Trend for ",Season_Name,"\nData Source:",Data_Source,sep="")
Im<-grid::rasterGrob(png::readPNG(paste("/ACMAD_Git/Logos/Acmad_logo_1.png",sep="")), interpolate = TRUE)
l<-ggplot(data = Pvalue_df,aes(x,y))+geom_contour_filled(data=Trend_df, aes(x,y,z =TrendValue),breaks= mybreaks, show.legend = TRUE) +
scale_fill_manual(palette=mycolors, values=breaklabel(9), name="mm/decade", drop=FALSE, guide = guide_legend(reverse = TRUE))+theme_bw()
last<-l+geom_polygon(data = Africa, aes(x = long,y = lat, group = group), fill = NA,color = "black",size = 1.1)+ theme(legend.position = c(.05, .05),legend.justification = c("left", "bottom"),legend.box.just = "right",legend.margin = margin(6, 6, 6, 6),legend.text = element_text(size=20,face = "bold"),legend.title =  element_text(size=15,face = "bold"),plot.title = element_text(hjust = 0.5,size=25,face = "bold"),axis.text.x = element_text(size=15,face = "bold"),axis.text.y = element_text(size=15,face = "bold"))
last<-last+  annotation_custom(Im, xmin = MaxLon-5, xmax = MaxLon, ymin =MaxLat-5, ymax = MaxLat) +coord_cartesian(clip = "off")
last<-last+labs(title = Title,x="",y="")+stat_subset(aes(subset =pvalue <=0.05),goem="point", size = 2.1,color="black")
last<-last+ metR::scale_x_longitude(limits = c(MinLon, MaxLon),breaks = seq(MinLon, MaxLon,10)) + metR:: scale_y_latitude(limits = c(MinLat, MaxLat),breaks = seq(MinLat, MaxLat,10))
dir.create(paste("Products/Trend/",sep=""),recursive = T,showWarnings = F)
jpeg(filename = paste("Products/Trend/",Season_Name,"-",Start_Year,"_",End_Year,".jpeg",sep=""),
width = 10,
height = 13,
units = "in",
res=300)
print(last)
dev.off()
}
################################################################################
#
#https://iridl.ldeo.columbia.edu/expert/expert/SOURCES/.NOAA/.NCEP/.CPC/.CAMS_OPI/.v0208/.mean/.prcp/T/(Aug%201981)/(Oct%202010)/RANGEEDGES/Y/-40/0.5/40/GRID/X/-25/0.5/55/GRID/T/3/runningAverage/T/12/STEP/92/mul/data.nc
################################################################################
library(rio)
library(dplyr)
library(RColorBrewer)
library(metR)
library(ggplot2)
library(rgdal)
library(ggplot2)
library(tidyverse)
library(raster)
library(sp)
library(ggdark)
library(showtext)
library(ggrepel)
require("fields")
library(zoo)
library(tidync)
library(Hmisc)
library(ncdf4)
rm(list = ls())
options(download.file.method="libcurl", url.method="libcurl")
options(download.file.extra = '--no-check-certificate')
setwd("E:/Climate-Agriculture-1/DrySpell/")
Africa<-readOGR("/ACMAD_Git/SHP_AFRIQUE/Afrique_frontier_news.shp")
###############################Define Your Parameters###########################
Start_Year=1980
End_Year=2021
Season_Name<-"FMA"
MinLon= -25
MaxLon=55
MinLat=-40
MaxLat=40
Data_Source="CPC-UNIFIED"
################################################################################
Year<-Start_Year
#################################################
dir.create("Data",recursive = T,showWarnings = F)
#   }
#   if(j==Start_Year){
#     ALL_Data<-Data
#   }
#   else{
#     ALL_Data<-rbind(ALL_Data,Data)
#   }
#   t<-t+1
#
# }
k=1981
jj=1
Season_Name="JAS"
Data=data_frame()
data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_DrySpell10/",Season_Name,"/",k,".csv",sep = ""))
data$Year=k
Data=rbind(Data,data)
for (k in 1981:2021) {
data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_DrySpell10/",Season_Name,"/",k,".csv",sep = ""))
data$Year=k
Data=rbind(Data,data)
}
# rio::export(ALL_Data,"Products/Data/Cumulative_81_2021_JJA.csv")
# ALL_Data$Cum<-ALL_Data$Cum/Number_of_Months
#
Trend<-Data%>%
group_by(X,Y)%>%
summarise(TrendValue=summary(lm(coredata(spell10)~index(Year)))$coefficients[2])
Trend$TrendValue<-Trend$TrendValue*10
#
Pvalue<-Data%>%
group_by(X,Y)%>%
summarise(pvalue=summary(lm(coredata(spell10)~index(Year)))$coefficients[8])
r<-rasterFromXYZ(Trend[,c("X","Y","TrendValue")])
Data_Interpolated<-disaggregate(r,10,method="bilinear")
Data_Interpolated<-raster::mask(Data_Interpolated,Africa)
writeRaster(Data_Interpolated,filename = paste("/ACMAD_Git/DrySpellTrend/TrendV_1981_2021_CAMS_",Season_Name,".nc",sep=""),varname="Trend",format="CDF",overwrite=TRUE)
Trend_Raster<-rasterFromXYZ(Trend)
Trend_Raster_Interpoleted<-disaggregate(Trend_Raster,10,"bilinear")
Trend_Raster_Interpoleted_Masked<-raster::mask(Trend_Raster_Interpoleted,Africa)
Trend_df<-as.data.frame(rasterToPoints(Trend_Raster_Interpoleted_Masked))
Pvalue_Raster<-rasterFromXYZ(Pvalue)
Pvalue_Raster_Interpoleted<-aggregate(Pvalue_Raster,fact=2)
Pvalue_Raster_Interpoleted_Masked<-raster::mask(Pvalue_Raster_Interpoleted,Africa)
Pvalue_df<-as.data.frame(rasterToPoints(Pvalue_Raster_Interpoleted_Masked))
mybreaks <- c(-Inf,-1,-0.9,-0.3,0,0.3,0.9,1,2,Inf)
#Function to return the dersired number of colors
mycolors<- function(x) {
colors<-colorRampPalette(c("#1806ff","#4c97ff","green","#e4ebdd","#e4ebdd","#FFAF42","#FF8303","red"))(9)
colors[1:x]
}
#Function to create labels for legend
breaklabel <- function(x){
labels<- as.character(c("<",-1,-0.9,-0.3,0,0.3,0.9,1,2,">"))
labels[1:x]
}
Title = paste("Dry Spell Over 10 Days Trend for ",Season_Name,"\nData Source:",Data_Source,sep="")
Im<-grid::rasterGrob(png::readPNG(paste("/ACMAD_Git/Logos/Acmad_logo_1.png",sep="")), interpolate = TRUE)
l<-ggplot(data = Pvalue_df,aes(x,y))+geom_contour_filled(data=Trend_df, aes(x,y,z =TrendValue),breaks= mybreaks, show.legend = TRUE) +
scale_fill_manual(palette=mycolors, values=breaklabel(9), name="day/decade", drop=FALSE, guide = guide_legend(reverse = TRUE))+theme_bw()
last<-l+geom_polygon(data = Africa, aes(x = long,y = lat, group = group), fill = NA,color = "black",size = 1.1)+ theme(legend.position = c(.05, .05),legend.justification = c("left", "bottom"),legend.box.just = "right",legend.margin = margin(6, 6, 6, 6),legend.text = element_text(size=20,face = "bold"),legend.title =  element_text(size=15,face = "bold"),plot.title = element_text(hjust = 0.5,size=25,face = "bold"),axis.text.x = element_text(size=15,face = "bold"),axis.text.y = element_text(size=15,face = "bold"))
last<-last+  annotation_custom(Im, xmin = MaxLon-5, xmax = MaxLon, ymin =MaxLat-5, ymax = MaxLat) +coord_cartesian(clip = "off")
last<-last+labs(title = Title,x="",y="")+stat_subset(aes(subset =pvalue <=0.05),goem="point", size = 2.1,color="black")
last<-last+ metR::scale_x_longitude(limits = c(MinLon, MaxLon),breaks = seq(MinLon, MaxLon,10)) + metR:: scale_y_latitude(limits = c(MinLat, MaxLat),breaks = seq(MinLat, MaxLat,10))
dir.create(paste("/Climate-Agriculture-1/DrySpell/Results/Trend_maps/",Data_Source,"/",sep=""),recursive = T,showWarnings = F)
jpeg(filename = paste("/Climate-Agriculture-1/DrySpell/Results/Trend_maps/",Data_Source,"/",jj,"-",Season_Name,"_",Start_Year,"_",End_Year,".jpeg",sep=""),
width = 10,
height = 13,
units = "in",
res=300)
print(last)
dev.off()
jj=jj+1
library(ncdf4)
library(dplyr)
library(rio)
library(ggplot2)
library(metR)
library(rgdal)
rm(list = ls())
Data_Source="CPC-UNIFIED"
Africa<-readOGR("SHP_AFRIQUE/Afrique_frontier_news.shp")
Africa<-readOGR("/ACMAD_Git/SHP_AFRIQUE/Afrique_frontier_news.shp")
setwd("/Climate-Agriculture-1/RainDays/")
Africa<-readOGR("/ACMAD_Git/SHP_AFRIQUE/Afrique_frontier_news.shp")
MinLon=-25
MaxLon=55
MinLat=-40
MaxLat=40
k=2000
cpt=7
A=c("Jan", "Feb", "Mar", "Apr", "May", "Jun" ,"Jul", "Aug", "Sep" ,"Oct", "Nov", "Dec")
cpt1=(cpt+1)%%12
if(cpt1==0) cpt1=12
cpt2=(cpt+2)%%12
if(cpt2==0) cpt2=12
Season_Name=paste(substr(A[cpt],1,1),substr(A[cpt1],1,1),substr(A[cpt2],1,1),sep = "")
Season<-c(A[cpt],A[cpt1],A[cpt2])
DDD=data.frame()
for (k in 1981:2010) {
Data=rio::import(paste("Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
Data$Year=k
DDD=rbind(DDD,Data)
print(paste("Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
}
Data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
Data$Year=k
DDD=rbind(DDD,Data)
print(paste("Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
for (k in 1981:2010) {
Data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
Data$Year=k
DDD=rbind(DDD,Data)
print(paste("Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
}
NumberDay=DDD%>%
group_by(X,Y)%>%
summarise(Mean=round(mean(NbRainDay),2),Total=sum(NbRainDay))
library(ncdf4)
library(dplyr)
library(rio)
library(ggplot2)
library(metR)
library(rgdal)
rm(list = ls())
Data_Source="CPC-UNIFIED"
setwd("/Climate-Agriculture-1/RainDays/")
Africa<-readOGR("/ACMAD_Git/SHP_AFRIQUE/Afrique_frontier_news.shp")
MinLon=-25
MaxLon=55
MinLat=-40
MaxLat=40
k=2000
cpt=7
A=c("Jan", "Feb", "Mar", "Apr", "May", "Jun" ,"Jul", "Aug", "Sep" ,"Oct", "Nov", "Dec")
cpt1=(cpt+1)%%12
if(cpt1==0) cpt1=12
cpt2=(cpt+2)%%12
if(cpt2==0) cpt2=12
Season_Name=paste(substr(A[cpt],1,1),substr(A[cpt1],1,1),substr(A[cpt2],1,1),sep = "")
Season<-c(A[cpt],A[cpt1],A[cpt2])
DDD=data.frame()
for (k in 1981:2010) {
Data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
Data$Year=k
DDD=rbind(DDD,Data)
print(paste("Data/CPC-UNIFIED/DataBase/Number_RainDays/",Season_Name,"/",k,".csv",sep = ""))
}
NumberDay=DDD%>%
group_by(X,Y)%>%
summarise(Mean=round(mean(NbRainDay),2),Total=sum(NbRainDay))
dir.create(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Climatology/Number_RainDays",sep = ""),recursive = T,showWarnings = F)
rio::export(NumberDay,paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Climatology/Number_RainDays/",Season_Name,".csv",sep = ""))
library(ncdf4)
library(dplyr)
library(rio)
library(ggplot2)
library(metR)
library(rgdal)
rm(list = ls())
Data_Source="CPC-UNIFIED"
setwd("/Climate-Agriculture-1/DrySpell/")
library(ncdf4)
library(dplyr)
library(rio)
library(ggplot2)
library(metR)
library(rgdal)
rm(list = ls())
Data_Source="CPC-UNIFIED"
setwd("/Climate-Agriculture-1/DrySpell/")
Africa<-readOGR("/ACMAD_Git/SHP_AFRIQUE/Afrique_frontier_news.shp")
MinLon=-25
MaxLon=55
MinLat=-40
MaxLat=40
k=2000
cpt=7
A=c("Jan", "Feb", "Mar", "Apr", "May", "Jun" ,"Jul", "Aug", "Sep" ,"Oct", "Nov", "Dec")
cpt1=(cpt+1)%%12
if(cpt1==0) cpt1=12
cpt2=(cpt+2)%%12
if(cpt2==0) cpt2=12
Season_Name=paste(substr(A[cpt],1,1),substr(A[cpt1],1,1),substr(A[cpt2],1,1),sep = "")
Season<-c(A[cpt],A[cpt1],A[cpt2])
DDD=data.frame()
Data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_DrySpell10/",Season_Name,"/",k,".csv",sep = ""))
DDD=rbind(DDD,Data)
print(paste("Data/CPC-UNIFIED/DataBase/Number_DrySpell10/",Season_Name,"/",k,".csv",sep = ""))
for (k in 1981:2010) {
Data=rio::import(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Number_DrySpell10/",Season_Name,"/",k,".csv",sep = ""))
DDD=rbind(DDD,Data)
print(paste("Data/CPC-UNIFIED/DataBase/Number_DrySpell10/",Season_Name,"/",k,".csv",sep = ""))
}
NumberDay=DDD%>%
group_by(X,Y)%>%
summarise(MeanNumberSpell10=mean(spell10),Total=sum(spell10))
dir.create(paste("/ACMAD_Git/Data/CPC-UNIFIED/DataBase/Climatology/Number_DrySpell10",sep = ""),recursive = T,showWarnings = F)
